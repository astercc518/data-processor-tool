name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test Flask app
      run: |
        python -c "
        import app
        import threading
        import time
        import requests
        
        # Start Flask app in background
        server = threading.Thread(target=lambda: app.app.run(host='0.0.0.0', port=5001, debug=False))
        server.daemon = True
        server.start()
        time.sleep(3)
        
        # Test basic endpoints  
        response = requests.get('http://localhost:5001/')
        assert response.status_code == 200
        print('âœ… Flask app test passed')
        "

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t data-processor-test .
    
    - name: Test Docker container
      run: |
        docker run -d --name test-container -p 5002:5000 data-processor-test
        sleep 10
        curl -f http://localhost:5002/ || exit 1
        docker stop test-container
        docker rm test-container